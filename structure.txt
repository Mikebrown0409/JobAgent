enterprise_job_agent/
├── main.py                 # Entry point and CLI interface
├── config.py              # Configuration and environment settings
├── agents/                # AI Agents using CrewAI
│   ├── __init__.py
│   ├── profile_adapter_agent.py    # Adapts user profiles to job requirements
│   ├── form_analyzer_agent.py      # Analyzes form structure and requirements
│   ├── application_executor_agent.py # Handles application execution
│   └── error_recovery_agent.py     # Handles error recovery
├── core/                  # Core system components
│   ├── __init__.py
│   ├── action_executor.py          # Executes form actions reliably
│   ├── application_state.py        # Manages application state and progress
│   ├── browser_manager.py          # Manages browser sessions and frames
│   ├── crew_manager.py             # Orchestrates AI agent interactions
│   ├── diagnostics_manager.py      # Tracks system performance and issues
│   ├── field_identification_system.py  # Identifies form field types
│   ├── frame_manager.py            # Handles iframe navigation
│   ├── job_extractor.py           # Extracts job posting details
│   ├── profile_manager.py         # Manages user profile data
│   ├── rate_limiter.py           # Controls request rates
│   └── response_cache.py         # Caches responses for efficiency
└── tools/                 # Specialized tools and utilities
    ├── __init__.py
    ├── data_formatter.py          # Formats data for form submission
    ├── dropdown_matcher.py        # Smart dropdown option matching
    ├── element_selector.py        # Enhanced element selection
    ├── field_identifier.py        # Form field identification
    ├── form_interaction.py        # Form interaction utilities
    ├── metrics_collector.py       # Collects performance metrics
    └── report_generator.py        # Generates diagnostic reports

Component Dependencies:
---------------------
1. Entry Point (main.py):
   - Depends on: config.py, crew_manager.py, browser_manager.py, job_extractor.py

2. Core Components:
   - crew_manager.py:
     ↳ Depends on: action_executor.py, browser_manager.py, diagnostics_manager.py
     ↳ Uses agents: profile_adapter_agent.py, form_analyzer_agent.py, application_executor_agent.py
   
   - action_executor.py:
     ↳ Depends on: browser_manager.py, diagnostics_manager.py
     ↳ Uses tools: form_interaction.py, field_identifier.py, element_selector.py
   
   - browser_manager.py:
     ↳ Depends on: frame_manager.py
     ↳ Uses tools: element_selector.py

3. Tools:
   - form_interaction.py:
     ↳ Depends on: browser_manager.py, element_selector.py
   
   - field_identifier.py:
     ↳ Used by: action_executor.py, field_identification_system.py
   
   - metrics_collector.py, report_generator.py:
     ↳ Used by: diagnostics_manager.py

4. Agents:
   All agents depend on crew_manager.py for orchestration
   - profile_adapter_agent.py:
     ↳ Uses tools: data_formatter.py
   - form_analyzer_agent.py:
     ↳ Uses tools: field_identifier.py
   - application_executor_agent.py:
     ↳ Uses: action_executor.py
   - error_recovery_agent.py:
     ↳ Uses: diagnostics_manager.py

Data Flow:
---------
1. User initiates job application (main.py)
2. Job data extracted (job_extractor.py)
3. Crew manager orchestrates process:
   a. Form analysis (form_analyzer_agent.py)
   b. Profile mapping (profile_adapter_agent.py)
   c. Execution planning (application_executor_agent.py)
   d. Action execution (action_executor.py)
4. Browser interactions handled by browser_manager.py
5. Diagnostics and metrics collected throughout
6. Error recovery triggered if needed

Testing Files:
------------
- test_job_application.py  # Main test suite
- test_discord.py         # Discord-specific tests
- test_simple.py         # Basic functionality tests 